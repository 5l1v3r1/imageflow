build: false
environment:
    PYTHON: "C:\\Python27"
    PYTHON_VERSION: "2.7.8"
    PYTHON_ARCH: "32"

configuration: Release

platform:
- x64
- x86

#We install nasm in case libjpeg-turbo has to be built from source
install:
  - curl -L -o nasminst.exe http://libgd.blob.core.windows.net/nasm/nasm-2.07-installer.exe
  - start /wait nasminst.exe /S
  - ps: $env:path="C:\Program Files (x86)\nasm;$($env:path)"
  - set PATH=%PATH%;%PYTHON%/Scripts/;C:\Program Files (x86)\nasm
  - pip.exe install conan
  - conan user # It creates the conan data directory
  - ps: Start-FileDownload 'https://static.rust-lang.org/dist/rust-nightly-i686-pc-windows-gnu.exe'
  - rust-nightly-i686-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - SET PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - rustc -V
  - cargo -V

test_script:
  - mkdir build
  - cd build
  - if "%PLATFORM%"=="x86" conan install -o build_tests=True -o shared=True --build missing  -s build_type=Release -s arch=x86 -u ../
  - if "%PLATFORM%"=="x64" conan install -o build_tests=True -o shared=True --build missing  -s build_type=Release -s arch=x86_64  -u ../
  - conan build ../
  - cd ..
  - conan export lasote/testing
  - cd wrappers/server
  - conan install --build missing
  - if "%PLATFORM%"=="x86" cargo build --target=i686-pc-windows-msvc
  - if "%PLATFORM%"=="x64" cargo build --target=x86_64-pc-windows-msvc
  - cargo test


artifacts:
  - path: 'wrappers/server/target/release/*.*'
    name: Rust binaries
    type: zip

